function [nodes,q]=Treenodes_JC_X(G,N,M,gamma)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  Introduction
%        This function generates a evolution matrix approximating the stochastic process
%        of the underlying asset by Johnson Curve when the distribution
%        followed by the asset is not normal and lognormal.
%
%  Input
%         G  (4*N matrix)   £ºthe first four moments matrix of the underlying asset,
%                                     i.e. , G(1:,) : the expectation of the asset at each time step;
%                                            G(2:,) : the variance of the asset at each time step;
%                                            G(3:,) : the skewness of the asset at each time step;
%                                            G(4:,) : the kurtosis of the asset at each time step;
%         N (a scalar)      £ºtotal time steps
%         M (a scalar)      £ºthe number of spatial nodes at each time step under
%                                         the willow tree structure
%         gamma (a scalar)  £ºan adjustable factor between 0 and 1
%
%  Output
%           nodes (M*N matrix)  : underlying asset matrix
%
%  Dependency files
%          zq.m : generate discrete sampling values of standard normal distribution
%          f_hhh.cpp : generate a required distribution, X, by its first four moments
%                               matrix and a standard normal distribution, Z, by X=c+d*g^{-1}((Z-a)/b),
%                               where a,b,c,d are Johnson Curve  parameters, g is a function.
%
%  References
%           1. N.L.Johnson, system of frequency curves generated by method of
%               translation,1949.
%           2. I.Hill and R.Holder, an algorithm as 99:Fitting Johnson curves by
%               moments,1976.
%
%  Implemented by
%              G.Wang 2016.12.15
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

[z,q,~,~] = zq(M,gamma);   % generate discrete sampling values
nodes=zeros(M,N);  % Initialization
itype=zeros(N,1);

% Determine the type of Johnson Curve parameters,a,b,c,d and the function,g
% by f_hhh process

for i=1:N
    mu=G(1,i);
    sd=sqrt(G(2,i));
    ka3=G(3,i);
    ka4=G(4,i);
    [a,b,d,c,itype(i),~]=f_hhh(mu,sd,ka3,ka4);
    
    % Transform the discrete values of standard normal
    % distributioed variable into our required underlying asset
    % by Johnson formula under different cases.
    
    if itype(i)==1 %type 1 lognormal
        u=(z(:)-a)./b;
        gi=exp(u(:));
        x=c+d.*gi(:);
    elseif itype(i)==2 %type 2 unbounded
        u=(z(:)-a)./b;
        gi=((exp(u(:))-exp(-u(:)))./2);
        x=c+d.*gi(:);
    elseif itype(i)==3 %type 3 bounded
        u=(z(:)-a)./b;
        gi=1./(1+exp(-u(:)));
        x=c+d.*gi(:);
    elseif itype(i)==4 %type 4 normal
        u=(z(:)-a)./b;
        gi=u(:);
        x=c+d.*gi(:);
    else
        %         x1 = linspace(mu-2*sd, mu,M*0.6);
        %         x2 = linspace(mu+0.01*sd, mu+2.5*sd, 0.4*M);
        %         x = [x1, x2];
        x = linspace(mu-4*sd, mu+4*sd ,M);
        x = x(:);
    end
    nodes(:,i)=sort(x); %generate the i-th column of the underlying asset matrix
    
end
end

